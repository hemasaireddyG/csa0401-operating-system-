receiver code
#include <windows.h>
#include <stdio.h>

LRESULT CALLBACK WindowProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam);

int main(void) {
    static char className[] = "MessageReceiverWindowClass";
    HINSTANCE hInstance = GetModuleHandle(NULL);
    WNDCLASS wc = {0};
    wc.lpfnWndProc = WindowProc;
    wc.hInstance = hInstance;
    wc.lpszClassName = className;

    RegisterClass(&wc);

    // Create the window
    HWND hwnd = CreateWindowEx(0, className, "IPC Message Receiver", 0, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, NULL, NULL, hInstance, NULL);
    
    MSG msg = {0};
    while (GetMessage(&msg, NULL, 0, 0)) {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }

    return 0;
}

LRESULT CALLBACK WindowProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam) {
    switch (uMsg) {
        case WM_CLOSE:
            PostQuitMessage(0);
            break;
        case WM_USER:
            printf("Received message: %ld\n", lParam);
            break;
        default:
            return DefWindowProc(hwnd, uMsg, wParam, lParam);
    }
    return 0;
}
sender code
#include <windows.h>
#include <stdio.h>

int main(void) {
    HWND hwndReceiver = FindWindow(NULL, "IPC Message Receiver");
    if (hwndReceiver == NULL) {
        printf("Receiver window not found.\n");
        return 1;
    }

    WPARAM wParam = 0; // Unused in this example
    LPARAM lParam = 123; // Example message data
    PostMessage(hwndReceiver, WM_USER, wParam, lParam);

    printf("Message sent.\n");

    return 0;
}
